{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "from selenium import webdriver\n",
    "from selenium.webdriver.common.keys import Keys\n",
    " \n",
    "def scrape_url(url):\n",
    " \n",
    "    # Load WebDriver and navigate to the page url.\n",
    "    # This will open a browser window.\n",
    "    driver = webdriver.Firefox()\n",
    "    driver.get(url)\n",
    "     \n",
    "    urls = []\n",
    " \n",
    "    # First click on More Blogs button to launch infinite scroll \n",
    "    # and then scroll to the end of the table by sending Page Down keypresses to\n",
    "    # the browser window.\n",
    "    driver.find_element_by_id('more-blog-scroll').click()\n",
    "\n",
    "    i = 0\n",
    "    while i < 100:\n",
    "        # Find the first element on the page, so we can scroll down using the\n",
    "        # element object's send_keys() method\n",
    "        elem = driver.find_element_by_tag_name('a')\n",
    "        elem.send_keys(Keys.PAGE_DOWN)\n",
    "        i += 1\n",
    "        \n",
    "    # Once the whole table has loaded, grab all the visible links.    \n",
    "    blog_divs = driver.find_elements_by_class_name('directory-blog')\n",
    "    for blog in blog_divs:\n",
    "        link = blog.find_element_by_xpath('.//a')\n",
    "        urls.append(link.get_attribute('href'))\n",
    "         \n",
    "    driver.quit()\n",
    "           \n",
    "    return urls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "scrape_url(\"http://hypem.com/blogs/country/US\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.4.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 0
}
